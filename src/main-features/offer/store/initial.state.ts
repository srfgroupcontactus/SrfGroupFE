import { IOffer } from "../../../shared/model/offer.model";
import { ISellOffer } from "../../../shared/model/sell-offer.model";
import { IRentOffer } from "../../../shared/model/rent-offer.model";
import { IFindOffer } from "../../../shared/model/find-offer.model";

export const initialState = {
  publicOffer: {
    loading: false,
    entity: {} as IOffer,
    loadingEntities: false,
    entities: [] as IOffer[],
    updateSuccess: false,
    loadingReport: false,
    reportSuccess: false,
    errorMessage: null,
    totalItems: -1,
    totalPages: 0,
    activePage: -1,
  },
  sellDetailsOffers: {
    loadingEntities: false,
    entities: [] as ISellOffer[],
    errorMessage: null,
    isLoaded: false,
  },
  rentDetailsOffers: {
    loadingEntities: false,
    entities: [] as IRentOffer[],
    errorMessage: null,
    isLoaded: false,
  },
  findDetailsOffers: {
    loadingEntities: false,
    entities: [] as IFindOffer[],
    errorMessage: null,
    isLoaded: false,
  },
  sellerOffer: {
    loading: false,
    entity: {} as ISellOffer,
    loadingEntities: false,
    entities: [] as ISellOffer[],
    updateSuccess: false,
    addSuccess: false,
    errorMessage: null,
    totalItems: 0,
  },
  rentOffer: {
    loading: false,
    entity: {} as IRentOffer,
    loadingEntities: false,
    entities: [] as IRentOffer[],
    updateSuccess: false,
    addSuccess: false,
    errorMessage: null,
    totalItems: 0,
  },
  findOffer: {
    loading: false,
    entity: {} as IFindOffer,
    loadingEntities: false,
    entities: [] as IFindOffer[],
    updateSuccess: false,
    addSuccess: false,
    errorMessage: null,
    totalItems: 0,
  },
  myOffers: {
    loading: false,
    entity: {} as IOffer,
    loadingEntities: false,
    entities: [] as IOffer[],
    updateSuccess: false,
    addSuccess: false,
    deleteSuccess: false,
    errorMessage: null,
    totalItems: 0,
    totalPages: 0,
    activePage: -1,
    uploadSuccess: false,
  },
  commentsOffer: {
    loading: false,
    entity: {},
    loadingEntities: false,
    entities: [],
    addSuccess: false,
    updateSuccess: false,
    deleteSuccess: false,
    reportSuccess: false,
    errorMessage: null,
    totalItems: -1,
    totalPages: 0,
  },
  userOffers: {
    loadingEntities: false,
    entities: [],
    totalItems: -1,
    totalPages: 0,
  },
  recentlyOffers: {
    loadingEntities: false,
    entities: [],
    totalItems: -1,
    totalPages: 0,
  },
  imagesOffers: {
    loadingEntities: false,
    entities: [],
    totalItems: -1,
    totalPages: 0,
  },
  descriptionNewOffer: {
    loading: false,
    entity: {},
    errorMessage: null,
  },
  countOffersByUser: {
    loading: false,
    entity: {},
  },
};
